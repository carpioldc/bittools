#!/bin/bash

#========================================================================
#=========
#=======	CONVERT BINARY FILE TO READABLE BIT TEXTUAL SEQUENCE		
#=========			Jorge Carpio, 2017
#========================================================================
	
clr="\e[32m"
rst="\e[0m"

if [ -r $1 ] && [ $# -le 3 ] && [ $# -gt 0 ]
then	
	inputf=$1
	outputf=$2

	if [ $# -gt 1 ]
	then
		if [ ! $outputf ]
		then
			outputf=/dev/stdout
		fi
		printf "$clr\n>> Output written to $outputf <<$rst\n\n"
		(xxd -b $inputf | cut -f 2-7 -d " " | tr -d " " | tr -d "\n") > $outputf
		echo ""
		echo ""
	else
		printf "$clr-- PRINTING BITS IN $inputf --\n\n$rst"
		(xxd -b $inputf | cut -f 2-7 -d " " | tr -d " " | tr -d "\n")
		printf "\n\n"
	fi
else
	printf "$clr\nUnpack bytes in file to bits to easen manual pattern matching"
	printf "\nUsage: binarize input_file [ output_file ]\n\n$rst"
fi
